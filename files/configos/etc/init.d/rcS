    #!/bin/sh
#
# rcS		Call all S??* scripts in /etc/rcS.d in
#		numerical/alphabetical order.
#
# Version:	@(#)/etc/init.d/rcS  2.76  19-Apr-1999  miquels@cistron.nl
#

PATH=/sbin:/bin:/usr/sbin:/usr/bin
runlevel=S
prevlevel=N
umask 022
export PATH runlevel prevlevel

DATAPARTITION=/dev/mmcblk1p6
DATATMPMNT=/mnt/data/

MAINOSPARTITION=/dev/mmcblk1p3
MAINOSTMPMNT=/mnt/mainos/

ETCTMPMNT=/mnt/etcfs/

FACTORYPARTITION=/dev/mmcblk1p1
FACTORYTMPMNT=/mnt/factory/

CMDFILE=$DATATMPMNT/updateCmd

# Mount system fs
mount -t proc proc /proc
mount -t sysfs sysfs /sys

# Source defaults.
. /etc/default/rcS
. /etc/exorint.funcs

# Trap CTRL-C &c only in this shell so we can interrupt subprocesses.
trap ":" INT QUIT TSTP

mount -t tmpfs -o rw,size=1M tmpfs /mnt

# Mount factory partition to get the splash image (if mount fails, perform format+mount)
mkdir $FACTORYTMPMNT
mount -o ro $FACTORYPARTITION $FACTORYTMPMNT
if [ $? -ne 0 ]; then
   mke2fs -T ext4 -L "factory" $FACTORYPARTITION
   mount -t ext4 -o ro $FACTORYPARTITION $FACTORYTMPMNT
fi

# Disable console on framebuffer to avoid showing console output and
# blinking when starting X
echo 0 > /sys/class/vtconsole/vtcon1/bind

# Clear console framebuffer
echo -ne "\ec"  > /dev/tty1

# Clear framebuffer
[ -e /dev/fb0 ] && cat /dev/zero > /dev/fb0

# Start splash
export TMPDIR=/mnt/.psplash
mkdir $TMPDIR
mount -t tmpfs -o rw,size=40k tmpfs $TMPDIR
/usr/bin/psplash &

psplash-write "PROGRESS 0"

mkdir $ETCTMPMNT

# creates a temporary rambased etcfs
mount -o bind /etc $ETCTMPMNT
# mount a volatile temporary fs in /etc copying files from original /etc
mount -t tmpfs -o rw,size=16M tmpfs /etc
cp -a $ETCTMPMNT/* /etc/
umount $ETCTMPMNT
rmdir $ETCTMPMNT

# Copy /etc/shadow from etc to the factory partition if not already there
if [ ! -e $FACTORYTMPMNT'shadow' ] ; then
  mount -o remount,rw $FACTORYTMPMNT
  cp -a /etc/shadow $FACTORYTMPMNT'shadow'
  chgrp shadow $FACTORYTMPMNT'shadow'
  mount -o remount,ro $FACTORYTMPMNT
fi

# creates a link
ln -s -b $FACTORYTMPMNT'shadow' /etc/shadow

# Mount mainos and data filesystems
if [ "$ENABLE_ROOTFS_FSCK" = "yes" ]; then
  exorint_extfsck $MAINOSPARTITION
  exorint_extfsck $DATAPARTITION
fi

mkdir $MAINOSTMPMNT
mkdir $DATATMPMNT
mount -t ext4 -o ro $MAINOSPARTITION $MAINOSTMPMNT
mount -t ext4 -o usrquota,grpquota $DATAPARTITION $DATATMPMNT
if [ $? -ne 0 ]; then
   mke2fs -T ext4 -L "data" $DATAPARTITION
   mount -t ext4 -o usrquota,grpquota $DATAPARTITION $DATATMPMNT
fi

[ -e $CMDFILE ] && /etc/updateCmd.sh

exorint_data_quotaon $DATATMPMNT $QUOTA_DATA_RESERVED

# Post-processing - setup other links to factory (global settings)
[ ! -L /etc/pointercal.xinput ] && ln -sf $FACTORYTMPMNT/etc/pointercal.xinput /etc/pointercal.xinput
[ ! -L /etc/rotation ] && ln -sf $FACTORYTMPMNT/etc/rotation /etc/rotation
[ ! -L /etc/X11/xorg.conf.d/x11-rotate.conf ] && mkdir -p /etc/X11/xorg.conf.d && \
    ln -sf $FACTORYTMPMNT/etc/X11/xorg.conf.d/x11-rotate.conf /etc/X11/xorg.conf.d/x11-rotate.conf

# Update splash progress bar
PROGRESS_STATE=10
echo $PROGRESS_STATE > $TMPDIR/progress_state
psplash-write "PROGRESS $PROGRESS_STATE"

sleep 1;

# Blind device management
if [ "$(exorint_ver_type)" = "ROUTER" ]; then
    exorint_service_enable "router"
    # bootcounter reset - done by psplash for panels
    psplash-write "QUIT"
fi

# Blind device management
if [ "$(exorint_ver_type)" = "DEVICE" ]; then
    # bootcounter reset - done by psplash for panels
    psplash-write "QUIT"
fi

if [ -d /sys/class/leds/us01\:fault\:usr0/ ]
then
    # Blink fault led to know if we are in configos
    echo timer > /sys/class/leds/us01\:fault\:usr0/trigger
    echo 100 > /sys/class/leds/us01\:fault\:usr0/delay_on
    echo 1000 > /sys/class/leds/us01\:fault\:usr0/delay_off
fi;

# Call all parts in order
exec /etc/init.d/rc S
